/*
*   Author:- Rahul Malhotra
*   Source:- Programming Vidya
*   Description:- Solution for Codechef MIXTURES Problem
*   Problem Link:- https://www.codechef.com/problems/MIXTURES
*	Website:- www.programmingvidya.com
*/

#include <iostream>
#include <stdio.h>
#include <climits>
using namespace std;

// * Initializing the arrays
int minimumSmoke[101][101];
int mixtures[100];

/*
*   This function is used to return the sum of mixtures
*   from start to end index by adding each mixture value
*   one by one to the sum mod 100
*/
int mixturesSum(int start, int end) {
    int sum = 0;
    for(int i=start; i<=end; i++) {
        sum += mixtures[i];
        sum %= 100;
    }
    return sum;
}

/*
*   This function is used to calculate the minimum smoke
*   that will be generated by mixing all the mixtures
*   from start to end index in the array
*/
int calculateMinimumSmoke(int start, int end) {

    // * If there is only one or no mixture for the given indexes, return 0
    if(start>=end) {
        return 0;
    }

    /*
    *   If the minimum smoke for start to end index
    *   is already calculated, return that value
    */
    if(minimumSmoke[start][end] > -1) {
        return minimumSmoke[start][end];
    }

    // * Initialize smoke from start to end index to maximum possible value
    minimumSmoke[start][end] = INT_MAX;

    /*
    *   Considering each partition from start to i and from i to end.
    *   Calculating the minimum smoke, where i ranges from start to end
    */
    for(int i=start; i<=end; i++) {
        minimumSmoke[start][end] = min(minimumSmoke[start][end], calculateMinimumSmoke(start, i) + calculateMinimumSmoke(i+1, end) + mixturesSum(start, i) * mixturesSum(i+1, end));
    }


    // * Returning the minimum smoke from start to end which is calculated above
    return minimumSmoke[start][end];
}


int main() {

    /*
    *   Used to take input from input.txt
    *   and write output to output.txt
    */
    #ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
    #endif

    // * Initializing variables
    int n;

    // * Executing each test case one by one
    while(cin>>n) {

        // * Initializing minimum smoke array with -1 for the current test case
        for(int i=0; i<n; i++) {
            for(int j=0; j<n; j++) {
                minimumSmoke[i][j] = -1;
            }
        }

        // * Accepting the value of n mixtures one by one
        for(int i=0; i<n; i++) {
            cin>>mixtures[i];
        }

        /*
        *   Displaying the minimum smoke accumulated
        *   after mixing all the mixtures together
        */
        cout<<calculateMinimumSmoke(0, n-1)<<endl;
    }

	return 0;
}